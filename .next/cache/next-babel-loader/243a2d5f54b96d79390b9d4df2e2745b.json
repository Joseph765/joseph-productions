{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/josep/Documents/personal-projects/joseph-productions/pages/blog.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from '../styles/Blog.module.css';\nimport Header from './header';\nimport { useState } from 'react';\nimport axios from 'axios';\n\nfunction Blog() {\n  _s();\n\n  var _useState = useState(0),\n      videos = _useState[0],\n      setVideos = _useState[1];\n\n  axios({\n    method: 'get',\n    url: \"https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&maxResults=20&playlistId=UUfAdLF-Ys_mxjBUHaRRjYpA&key=\".concat(process.env.YouTube_API_KEY_V3)\n  }).then(function (response) {\n    console.log(response);\n  })[\"catch\"](function (error) {\n    console.log(error);\n  });\n  console.log('result: ' + videos);\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"Blog\"), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, videos));\n} // export async function getServerSideProps() {\n//   // GET https://www.googleapis.com/youtube/v3/channels?part=contentDetails&mine=true&key=[YOUR_API_KEY] HTTP/1.1\n//   // GET https://www.googleapis.com/youtube/v3/channels?part=contentDetails&id=UCfAdLF-Ys_mxjBUHaRRjYpA&key=[YOUR_API_KEY] HTTP/1.1\n//   // UPLOADS ID: \"UUfAdLF-Ys_mxjBUHaRRjYpA\"\n//   // Authorization: Bearer [YOUR_ACCESS_TOKEN]\n//   // Accept: application/json\n//   // Call an external API endpoint to get posts.\n//   // You can use any data fetching library\n//   const uploadId = fetch(`https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&maxResults=20&playlistId=UUfAdLF-Ys_mxjBUHaRRjYpA&key=${process.env.YouTube_API_KEY_V3}`);\n//   //GET https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&maxResults=20&playlistId=UUfAdLF-Ys_mxjBUHaRRjYpA&key=[YOUR_API_KEY] HTTP/1.1\n//   // const videoList = await fetch(`https://www.googleapis.com/youtube/v3/playlistItems?playlistId={${uploadId}}&key={API key}&part=snippet&maxResults=50`);\n//   // const videos = await videoList.json()\n//   // By returning { props: videos }, the Blog component\n//   // will receive `posts` as a prop at build time\n//   const videos = JSON.stringify(uploadId);\n//   return { props: { videos } }\n// }\n\n\n_s(Blog, \"/lXKJjUTd+Ht2kgPpLR2+t1x9EA=\");\n\n_c = Blog;\nexport default Blog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"sources":["/mnt/c/Users/josep/Documents/personal-projects/joseph-productions/pages/blog.js"],"names":["styles","Header","useState","axios","Blog","videos","setVideos","method","url","process","env","YouTube_API_KEY_V3","then","response","console","log","error","container"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,IAAT,GAAiB;AAAA;;AAAA,kBAEaF,QAAQ,CAAC,CAAD,CAFrB;AAAA,MAERG,MAFQ;AAAA,MAEAC,SAFA;;AAIfH,EAAAA,KAAK,CAAC;AACJI,IAAAA,MAAM,EAAE,KADJ;AAEJC,IAAAA,GAAG,mIAA4HC,OAAO,CAACC,GAAR,CAAYC,kBAAxI;AAFC,GAAD,CAAL,CAICC,IAJD,CAIM,UAACC,QAAD,EAAc;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,GAND,WAOO,UAAAG,KAAK,EAAI;AACdF,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD,GATD;AAWAF,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAaV,MAAzB;AAEA,SACE;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACiB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKZ,MAAL,CAHF,CADF;AAQD,C,CAED;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;;;GArDSD,I;;KAAAA,I;AAuDT,eAAeA,IAAf","sourcesContent":["import styles from '../styles/Blog.module.css';\r\nimport Header from './header';\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Blog () {\r\n\r\n  const [videos, setVideos] = useState(0);\r\n\r\n  axios({\r\n    method: 'get',\r\n    url: `https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&maxResults=20&playlistId=UUfAdLF-Ys_mxjBUHaRRjYpA&key=${process.env.YouTube_API_KEY_V3}`,\r\n  })\r\n  .then((response) => {\r\n    console.log(response);\r\n  })\r\n  .catch(error => {\r\n    console.log(error);\r\n  });\r\n\r\n  console.log('result: ' + videos);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Header />\r\n      <h1>Blog</h1>\r\n      <h2>{videos}</h2>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\n// export async function getServerSideProps() {\r\n\r\n//   // GET https://www.googleapis.com/youtube/v3/channels?part=contentDetails&mine=true&key=[YOUR_API_KEY] HTTP/1.1\r\n//   // GET https://www.googleapis.com/youtube/v3/channels?part=contentDetails&id=UCfAdLF-Ys_mxjBUHaRRjYpA&key=[YOUR_API_KEY] HTTP/1.1\r\n//   // UPLOADS ID: \"UUfAdLF-Ys_mxjBUHaRRjYpA\"\r\n\r\n//   // Authorization: Bearer [YOUR_ACCESS_TOKEN]\r\n//   // Accept: application/json\r\n\r\n\r\n//   // Call an external API endpoint to get posts.\r\n//   // You can use any data fetching library\r\n//   const uploadId = fetch(`https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&maxResults=20&playlistId=UUfAdLF-Ys_mxjBUHaRRjYpA&key=${process.env.YouTube_API_KEY_V3}`);\r\n\r\n//   //GET https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&maxResults=20&playlistId=UUfAdLF-Ys_mxjBUHaRRjYpA&key=[YOUR_API_KEY] HTTP/1.1\r\n\r\n\r\n\r\n\r\n//   // const videoList = await fetch(`https://www.googleapis.com/youtube/v3/playlistItems?playlistId={${uploadId}}&key={API key}&part=snippet&maxResults=50`);\r\n//   // const videos = await videoList.json()\r\n\r\n//   // By returning { props: videos }, the Blog component\r\n//   // will receive `posts` as a prop at build time\r\n//   const videos = JSON.stringify(uploadId);\r\n//   return { props: { videos } }\r\n// }\r\n\r\nexport default Blog;"]},"metadata":{},"sourceType":"module"}