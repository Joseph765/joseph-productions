{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/josep/Documents/personal-projects/joseph-productions/pages/blog.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from '../styles/Blog.module.css';\nimport Header from './header';\n\nfunction Blog(videos) {\n  console.log(videos);\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, \"Blog\"), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, videos));\n}\n\nexport async function getServerSideProps() {\n  // GET https://www.googleapis.com/youtube/v3/channels?part=contentDetails&mine=true&key=[YOUR_API_KEY] HTTP/1.1\n  // Authorization: Bearer [YOUR_ACCESS_TOKEN]\n  // Accept: application/json\n  // Call an external API endpoint to get posts.\n  // You can use any data fetching library\n  const uploadId = await fetch(`https://www.googleapis.com/youtube/v3/channels?id={UCfAdLF-Ys_mxjBUHaRRjYpA}&key={${process.env.YouTube_API_KEY_V3}}&part=contentDetails`); // const videoList = await fetch(`https://www.googleapis.com/youtube/v3/playlistItems?playlistId={${uploadId}}&key={API key}&part=snippet&maxResults=50`);\n  // const videos = await videoList.json()\n  // By returning { props: videos }, the Blog component\n  // will receive `posts` as a prop at build time\n\n  const uploadData = JSON.stringify(uploadId);\n  console.log(uploadData);\n  return {\n    props: {\n      uploadData\n    }\n  };\n}\nexport default Blog;","map":{"version":3,"sources":["/mnt/c/Users/josep/Documents/personal-projects/joseph-productions/pages/blog.js"],"names":["styles","Header","Blog","videos","console","log","container","getServerSideProps","uploadId","fetch","process","env","YouTube_API_KEY_V3","uploadData","JSON","stringify","props"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,SAASC,IAAT,CAAeC,MAAf,EAAuB;AAErBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAEA,SACE;AAAK,IAAA,SAAS,EAAEH,MAAM,CAACM,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,MAAL,CAHF,CADF;AAQD;;AAED,OAAO,eAAeI,kBAAf,GAAoC;AAEzC;AAEA;AACA;AAGA;AACA;AACA,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,qFAAoFC,OAAO,CAACC,GAAR,CAAYC,kBAAmB,uBAArH,CAA5B,CAVyC,CAazC;AACA;AAEA;AACA;;AACA,QAAMC,UAAU,GAAGC,IAAI,CAACC,SAAL,CAAeP,QAAf,CAAnB;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAYQ,UAAZ;AACA,SAAO;AAAEG,IAAAA,KAAK,EAAE;AAAEH,MAAAA;AAAF;AAAT,GAAP;AACD;AAED,eAAeX,IAAf","sourcesContent":["import styles from '../styles/Blog.module.css';\r\nimport Header from './header';\r\n\r\nfunction Blog (videos) {\r\n\r\n  console.log(videos);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Header />\r\n      <h1>Blog</h1>\r\n      <h2>{videos}</h2>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport async function getServerSideProps() {\r\n\r\n  // GET https://www.googleapis.com/youtube/v3/channels?part=contentDetails&mine=true&key=[YOUR_API_KEY] HTTP/1.1\r\n\r\n  // Authorization: Bearer [YOUR_ACCESS_TOKEN]\r\n  // Accept: application/json\r\n\r\n\r\n  // Call an external API endpoint to get posts.\r\n  // You can use any data fetching library\r\n  const uploadId = await fetch(`https://www.googleapis.com/youtube/v3/channels?id={UCfAdLF-Ys_mxjBUHaRRjYpA}&key={${process.env.YouTube_API_KEY_V3}}&part=contentDetails`);\r\n\r\n\r\n  // const videoList = await fetch(`https://www.googleapis.com/youtube/v3/playlistItems?playlistId={${uploadId}}&key={API key}&part=snippet&maxResults=50`);\r\n  // const videos = await videoList.json()\r\n\r\n  // By returning { props: videos }, the Blog component\r\n  // will receive `posts` as a prop at build time\r\n  const uploadData = JSON.stringify(uploadId);\r\n  console.log(uploadData)\r\n  return { props: { uploadData } }\r\n}\r\n\r\nexport default Blog;"]},"metadata":{},"sourceType":"module"}