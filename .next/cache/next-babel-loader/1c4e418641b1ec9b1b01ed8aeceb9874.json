{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/josep/Documents/personal-projects/joseph-productions/pages/blog.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from '../styles/Blog.module.css';\nimport Header from './header';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction Blog() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState([]),\n      videoTitles = _useState[0],\n      setVideoTitles = _useState[1];\n\n  var _useState2 = useState([]),\n      thumbnails = _useState2[0],\n      setThumbnails = _useState2[1];\n\n  var _useState3 = useState([]),\n      descriptions = _useState3[0],\n      setDescriptions = _useState3[1];\n\n  useeEffect(function () {\n    axios({\n      method: 'get',\n      url: \"https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&maxResults=20&playlistId=UUfAdLF-Ys_mxjBUHaRRjYpA&key=\".concat(process.env.YouTube_API_KEY_V3)\n    }).then(function (res) {\n      console.log(res.data.items[0].snippet.thumbnails.standard.url);\n      setVideoTitles(res.data.items);\n    })[\"catch\"](function (error) {\n      console.log(error);\n    });\n  }, []);\n  console.log('result: ' + videos);\n  var videos = videoTitles.map(function (item) {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, __jsx(\"h2\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, item.snippet.title), __jsx(\"img\", {\n      src: item.snippet.thumbnails,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }));\n  });\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Blog\"));\n} // export async function getServerSideProps() {\n//   // GET https://www.googleapis.com/youtube/v3/channels?part=contentDetails&mine=true&key=[YOUR_API_KEY] HTTP/1.1\n//   // GET https://www.googleapis.com/youtube/v3/channels?part=contentDetails&id=UCfAdLF-Ys_mxjBUHaRRjYpA&key=[YOUR_API_KEY] HTTP/1.1\n//   // UPLOADS ID: \"UUfAdLF-Ys_mxjBUHaRRjYpA\"\n//   // Authorization: Bearer [YOUR_ACCESS_TOKEN]\n//   // Accept: application/json\n//   // Call an external API endpoint to get posts.\n//   // You can use any data fetching library\n//   const uploadId = fetch(`https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&maxResults=20&playlistId=UUfAdLF-Ys_mxjBUHaRRjYpA&key=${process.env.YouTube_API_KEY_V3}`);\n//   //GET https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&maxResults=20&playlistId=UUfAdLF-Ys_mxjBUHaRRjYpA&key=[YOUR_API_KEY] HTTP/1.1\n//   // const videoList = await fetch(`https://www.googleapis.com/youtube/v3/playlistItems?playlistId={${uploadId}}&key={API key}&part=snippet&maxResults=50`);\n//   // const videos = await videoList.json()\n//   // By returning { props: videos }, the Blog component\n//   // will receive `posts` as a prop at build time\n//   const videos = JSON.stringify(uploadId);\n//   return { props: { videos } }\n// }\n\n\n_s(Blog, \"mk889C0yqs0NYpVn0eaWk0eqbNU=\");\n\n_c = Blog;\nexport default Blog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"sources":["/mnt/c/Users/josep/Documents/personal-projects/joseph-productions/pages/blog.js"],"names":["styles","Header","useState","useEffect","axios","Blog","videoTitles","setVideoTitles","thumbnails","setThumbnails","descriptions","setDescriptions","useeEffect","method","url","process","env","YouTube_API_KEY_V3","then","res","console","log","data","items","snippet","standard","error","videos","map","item","title","container"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,IAAT,GAAiB;AAAA;;AAAA;;AAAA,kBAEuBH,QAAQ,CAAC,EAAD,CAF/B;AAAA,MAERI,WAFQ;AAAA,MAEKC,cAFL;;AAAA,mBAGqBL,QAAQ,CAAC,EAAD,CAH7B;AAAA,MAGRM,UAHQ;AAAA,MAGIC,aAHJ;;AAAA,mBAIyBP,QAAQ,CAAC,EAAD,CAJjC;AAAA,MAIRQ,YAJQ;AAAA,MAIMC,eAJN;;AAMfC,EAAAA,UAAU,CAAE,YAAM;AAChBR,IAAAA,KAAK,CAAC;AACJS,MAAAA,MAAM,EAAE,KADJ;AAEJC,MAAAA,GAAG,mIAA4HC,OAAO,CAACC,GAAR,CAAYC,kBAAxI;AAFC,KAAD,CAAL,CAICC,IAJD,CAIM,UAACC,GAAD,EAAS;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASC,KAAT,CAAe,CAAf,EAAkBC,OAAlB,CAA0BhB,UAA1B,CAAqCiB,QAArC,CAA8CX,GAA1D;AACAP,MAAAA,cAAc,CAACY,GAAG,CAACG,IAAJ,CAASC,KAAV,CAAd;AACD,KAPD,WAQO,UAAAG,KAAK,EAAI;AACdN,MAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACD,KAVD;AAWD,GAZS,EAYP,EAZO,CAAV;AAcAN,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAaM,MAAzB;AAEA,MAAMA,MAAM,GAAGrB,WAAW,CAACsB,GAAZ,CAAiB,UAAAC,IAAI,EAAI;AAEtC,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAI,CAACL,OAAL,CAAaM,KAAlB,CADF,EAEE;AAAK,MAAA,GAAG,EAAED,IAAI,CAACL,OAAL,CAAahB,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD,GARc,CAAf;AAUA,SACE;AAAK,IAAA,SAAS,EAAER,MAAM,CAAC+B,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CADF;AAOD,C,CAED;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;;;GAnES1B,I;;KAAAA,I;AAqET,eAAeA,IAAf","sourcesContent":["import styles from '../styles/Blog.module.css';\r\nimport Header from './header';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Blog () {\r\n\r\n  const [videoTitles, setVideoTitles] = useState([]);\r\n  const [thumbnails, setThumbnails] = useState([]);\r\n  const [descriptions, setDescriptions] = useState([]);\r\n\r\n  useeEffect( () => {\r\n    axios({\r\n      method: 'get',\r\n      url: `https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&maxResults=20&playlistId=UUfAdLF-Ys_mxjBUHaRRjYpA&key=${process.env.YouTube_API_KEY_V3}`,\r\n    })\r\n    .then((res) => {\r\n      console.log(res.data.items[0].snippet.thumbnails.standard.url);\r\n      setVideoTitles(res.data.items);\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }, [])\r\n\r\n  console.log('result: ' + videos);\r\n\r\n  const videos = videoTitles.map( item => {\r\n\r\n    return (\r\n      <div>\r\n        <h2>{item.snippet.title}</h2>\r\n        <img src={item.snippet.thumbnails} />\r\n      </div>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Header />\r\n      <h1>Blog</h1>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\n// export async function getServerSideProps() {\r\n\r\n//   // GET https://www.googleapis.com/youtube/v3/channels?part=contentDetails&mine=true&key=[YOUR_API_KEY] HTTP/1.1\r\n//   // GET https://www.googleapis.com/youtube/v3/channels?part=contentDetails&id=UCfAdLF-Ys_mxjBUHaRRjYpA&key=[YOUR_API_KEY] HTTP/1.1\r\n//   // UPLOADS ID: \"UUfAdLF-Ys_mxjBUHaRRjYpA\"\r\n\r\n//   // Authorization: Bearer [YOUR_ACCESS_TOKEN]\r\n//   // Accept: application/json\r\n\r\n\r\n//   // Call an external API endpoint to get posts.\r\n//   // You can use any data fetching library\r\n//   const uploadId = fetch(`https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&maxResults=20&playlistId=UUfAdLF-Ys_mxjBUHaRRjYpA&key=${process.env.YouTube_API_KEY_V3}`);\r\n\r\n//   //GET https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&maxResults=20&playlistId=UUfAdLF-Ys_mxjBUHaRRjYpA&key=[YOUR_API_KEY] HTTP/1.1\r\n\r\n\r\n\r\n\r\n//   // const videoList = await fetch(`https://www.googleapis.com/youtube/v3/playlistItems?playlistId={${uploadId}}&key={API key}&part=snippet&maxResults=50`);\r\n//   // const videos = await videoList.json()\r\n\r\n//   // By returning { props: videos }, the Blog component\r\n//   // will receive `posts` as a prop at build time\r\n//   const videos = JSON.stringify(uploadId);\r\n//   return { props: { videos } }\r\n// }\r\n\r\nexport default Blog;"]},"metadata":{},"sourceType":"module"}