{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/josep/Documents/personal-projects/joseph-productions/components/videos.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nexport default function Videos() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState([]),\n      videos = _useState[0],\n      setVideos = _useState[1];\n\n  useEffect(function () {\n    axios({\n      method: 'get',\n      url: \"https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&maxResults=20&playlistId=UUfAdLF-Ys_mxjBUHaRRjYpA&key=\".concat(process.env.YouTube_API_KEY_V3)\n    }).then(function (res) {\n      console.log(res);\n      setVideos(res.data.items);\n    })[\"catch\"](function (error) {\n      console.log(error);\n    });\n  }, []);\n  return __jsx(\"div\", {\n    className: \"videos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, videos.map(function (item) {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }, __jsx(\"h2\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, item.snippet.title), __jsx(\"iframe\", {\n      width: \"420\",\n      height: \"315\",\n      src: \"https://www.youtube.com/embed/\".concat(item.snippet.resourceId.videoId),\n      frameborder: \"0\",\n      allowfullscreen: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }));\n  }));\n}\n\n_s(Videos, \"39g9r2hk3cJXA16k+db4Z3Rqykw=\");\n\n_c = Videos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Videos\");","map":{"version":3,"sources":["/mnt/c/Users/josep/Documents/personal-projects/joseph-productions/components/videos.js"],"names":["axios","useState","useEffect","Videos","videos","setVideos","method","url","process","env","YouTube_API_KEY_V3","then","res","console","log","data","items","error","map","item","snippet","title","resourceId","videoId"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAAA;;AAAA,kBACHF,QAAQ,CAAC,EAAD,CADL;AAAA,MACxBG,MADwB;AAAA,MAChBC,SADgB;;AAG/BH,EAAAA,SAAS,CAAC,YAAM;AACdF,IAAAA,KAAK,CAAC;AACJM,MAAAA,MAAM,EAAE,KADJ;AAEJC,MAAAA,GAAG,mIAA4HC,OAAO,CAACC,GAAR,CAAYC,kBAAxI;AAFC,KAAD,CAAL,CAICC,IAJD,CAIM,UAACC,GAAD,EAAS;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAP,MAAAA,SAAS,CAACO,GAAG,CAACG,IAAJ,CAASC,KAAV,CAAT;AACD,KAPD,WAQO,UAAAC,KAAK,EAAI;AACdJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACD,KAVD;AAWD,GAZQ,EAYN,EAZM,CAAT;AAeA,SACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,MAAM,CAACc,GAAP,CAAY,UAAAC,IAAI,EAAI;AACnB,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAI,CAACC,OAAL,CAAaC,KAAlB,CADF,EAEE;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAoB,MAAA,MAAM,EAAC,KAA3B;AAAiC,MAAA,GAAG,0CAAmCF,IAAI,CAACC,OAAL,CAAaE,UAAb,CAAwBC,OAA3D,CAApC;AAA0G,MAAA,WAAW,EAAC,GAAtH;AAA0H,MAAA,eAAe,MAAzI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAOD,GARA,CADH,CADF;AAaD;;GA/BuBpB,M;;KAAAA,M","sourcesContent":["import axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport default function Videos() {\r\n  const [videos, setVideos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: 'get',\r\n      url: `https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&maxResults=20&playlistId=UUfAdLF-Ys_mxjBUHaRRjYpA&key=${process.env.YouTube_API_KEY_V3}`,\r\n    })\r\n    .then((res) => {\r\n      console.log(res);\r\n      setVideos(res.data.items);\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div className=\"videos\">\r\n      {videos.map( item => {\r\n        return (\r\n          <div>\r\n            <h2>{item.snippet.title}</h2>\r\n            <iframe width=\"420\" height=\"315\" src={`https://www.youtube.com/embed/${item.snippet.resourceId.videoId}`} frameborder=\"0\" allowfullscreen></iframe>\r\n            {/* <img src={item.snippet.thumbnails.standard.url} /> */}\r\n          </div>\r\n        )\r\n      })}\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}